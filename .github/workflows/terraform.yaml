name: Build Azure VM with Terraform

on: [push]

jobs:
  dsgAzureVMbuild:
    runs-on: self-hosted
    steps:
    #- name: Deploy Stage
    #  uses: fjogeleit/http-request-action@v1.14.0
    #  with:
    #    url: 'https://vra-01.dcsg.com'
    #    method: 'POST'
    #    username: 
    #    password: 
    #    customHeaders: '{"Content-Type": "application/json"}'
    #    data: '{"key_1": "value_1", "key_2": "value_2"}'
    #  - name: Hello world
    #    run: |
    #      hostname; ls -l; df -hP
        # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    #- name: Setup Terraform
    #  uses: hashicorp/setup-terraform@v1
    #  with:
    #    cli_config_credentials_token: pRHsWQOVWPXqaw.atlasv1.aiq2D7qFEx0hHSy4UrRhrcrELI25E1uyHu6zs2PyqekoY7ktNJjo9LiTDojze8lWu30

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Terraform Init
      run: terraform init

    # # Checks that all Terraform configuration files adhere to a canonical format
    # - name: Terraform Format
    #   run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      # run: terraform plan -input=false
      run: terraform plan -out main.tfplan

      # On push to "master", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      # if: github.ref == 'refs/heads/"master"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false  main.tfplan
      # run: terraform apply main.tfplan                                                                                   